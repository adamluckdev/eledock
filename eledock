#! /bin/bash

find_running_php_fpm_container() {
  local container=$(docker ps | grep eledock-php${1}-fpm | awk '{print $1}')

  if [ -z "${container}" ]; then
    echo "Running container for PHP version ${1} was not found"
    exit 1
  fi

  echo ${container}
}

xdebug() {
  if [ -z ${2+x} ] || [ ${2} == "help" ]; then
    xdebug_help
    exit 1
  fi

  if [ -z ${2+x} ] || [ -z ${3+x} ]; then
    echo "Missing required argument."
    echo "---"
    xdebug_help
    exit 1
  fi

  PHP_FPM_CONTAINER=$(find_running_php_fpm_container $3 2>&1)

  if [[ $? -ne 0 ]]; then
    echo $PHP_FPM_CONTAINER
    exit 1
  fi

  case $2 in
    stop | STOP)
      xdebug_stop
      ;;
    start | START)
      xdebug_start
      ;;
    status | STATUS)
      xdebug_status
      ;;
    *)
      echo "Unrecognized argument"
      echo "---"
      xdebug_help
      ;;
  esac
}

xdebug_status() {
  echo 'xDebug status'
  docker exec -it $PHP_FPM_CONTAINER bash -c 'php -m | grep xdebug'
}

xdebug_start() {
  echo 'Start xDebug'

  # And uncomment line with xdebug extension, thus enabling it
  ON_CMD="sed -i 's/^;zend_extension=/zend_extension=/g' \
                    /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"

  docker exec -it $PHP_FPM_CONTAINER bash -c "${ON_CMD}"
  docker restart $PHP_FPM_CONTAINER
  xdebug_status
}

xdebug_stop() {
  echo 'Stop xDebug'

  # Comment out xdebug extension line
  OFF_CMD="sed -i 's/^zend_extension=/;zend_extension=/g' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"

  docker exec -it $PHP_FPM_CONTAINER bash -c "${OFF_CMD}"
  docker restart $PHP_FPM_CONTAINER
  xdebug_status
}

xdebug_help() {
  echo "xDebug [stop | start | status] in the php container."
  echo "Usage:"
  echo " ./eledock xdebug stop|start|status 81|82|83"
}

php_enter() {
  if [ -z ${3+x} ]; then
    echo "Missing PHP version."
    echo "---"
    php_enter_help
    exit 1
  fi

  PHP_FPM_CONTAINER=$(find_running_php_fpm_container $3 2>&1)

  if [[ $? -ne 0 ]]; then
    echo $PHP_FPM_CONTAINER
    exit 1
  fi

  docker exec -u www-data -it $PHP_FPM_CONTAINER bash
}

php_enter_help() {
  echo "Usage:"
  echo " ./eledock enter php 81|82|83"
}

help() {
  echo "Usage:"
  echo "./eledock enter|xdebug|start|stop"
}

enter() {
  case $2 in
    php | PHP)
      php_enter $@
      ;;
    nodejs | NODEJS)
      docker exec -u node -it eledock-nodejs bash
      ;;
    *)
      echo "Unrecognized argument"
      echo "---"
      enter_help
      ;;
  esac
}

enter_help() {
  echo "Usage:"
  echo "./eledock enter nodejs|php"
}

start() {
  local servicesFile="${PWD}/.services"
  if [ -a $servicesFile ]; then
    source $servicesFile
  fi
  docker compose up -d ${REQUIRED_SERVICES:-} $2
}

stop() {
  docker compose stop
}

case $1 in
  xdebug)
    xdebug $@
    ;;
  enter)
    enter $@
    ;;
  start)
    start $@
    ;;
  stop)
    stop
    ;;
  *)
    help
    ;;
esac

exit 0
